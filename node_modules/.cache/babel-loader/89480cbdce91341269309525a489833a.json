{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/buzzlite/MCG-VUiLA/src/Onboarding/OnboardingCompany.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { Form, Input, Select } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nconst options = [{\n  key: 'm',\n  text: \"Manufacturer\",\n  value: \"Manufacturer\"\n}, {\n  key: 'd',\n  text: \"Distributor\",\n  value: \"Distributor\"\n}, {\n  key: 't',\n  text: \"3PL Trucking\",\n  value: \"3PL trucking\"\n}];\n\nclass OnboardingCompany extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let err = \"\";\n\n      if (nam === \"company\" || \"location\" || \"scRole\") {\n        if (val !== \"\" && Number(val)) {\n          err = /*#__PURE__*/_jsxDEV(\"strong\", {\n            color: \"red\",\n            children: \"Fields cannot be empty and must be string except Identification Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this);\n        } // }\n        // else if(nam = \"identificationNumber\"){\n        //     if(!Number(val) && val === null){\n        //     err = <strong> Fields cannot be empty and must be a number</strong>\n        // }\n\n      }\n\n      this.setState({\n        error: err\n      });\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.changeSelect = (e, {\n      value\n    }) => this.setState({\n      scRole: value\n    });\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      this.registerMyCompany(this.state.companyName, this.state.identificationNumber, this.state.location, this.state.scRole);\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n    this.state = {\n      companyName: null,\n      identificationNumber: null,\n      location: null,\n      scRole: null,\n      error: '',\n      companyId: null\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.changeSelect = this.changeSelect.bind(this);\n  }\n\n  companyDidMount() {\n    this.checkOwnedCompany();\n    this.watchEvents();\n  }\n\n  watchEvents() {\n    this.props.mcg.events.companyRegistered({\n      filter: {\n        _user: this.props.userAccount\n      }\n    }, {\n      fromBlock: 0,\n      toBlock: \"latest\"\n    }, function (error, event) {\n      console.log(event);\n    }).on('data', function (event) {\n      this.setState({\n        companyId: event.companyId\n      });\n      console.log(event.companyId);\n    });\n  }\n\n  async registerMyCompany(companyName, identificationNumber, location, scRole) {\n    const gasAmount = await this.props.mcg.methods.registerCompany(companyName, identificationNumber, location, scRole).estimateGas({\n      from: this.props.userAccount\n    });\n    await this.props.mcg.methods.registerCompany(companyName, identificationNumber, location, scRole).send({\n      from: this.props.userAccount,\n      gas: gasAmount\n    });\n  }\n\n  async checkOwnedCompany() {\n    var company = await this.props.mcg.methods.getYourCompany().call();\n    this.setState({\n      companyName: company.owner\n    });\n    return company.owner.length > 2;\n  }\n\n  render() {\n    return !this.checkOwnedCompany() ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          control: Input,\n          fluid: true,\n          label: \"Company Name\",\n          placeholder: \" XYZ Ltd.\",\n          name: \"companyName\",\n          onChange: this.changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: Input,\n          fluid: true,\n          label: \"Identification Number\",\n          placeholder: \"123456789\",\n          name: \"identificationNumber\",\n          onChange: this.changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: Input,\n          fluid: true,\n          label: \"Location\",\n          placeholder: \"1000 10 W Ave Vancouver\",\n          name: \"location\",\n          onChange: this.changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: Select,\n          name: \"scRole\",\n          onChange: this.changeSelect,\n          fluid: true,\n          label: \"Select Supply Chain Role\",\n          options: options,\n          placeholder: \"Manufacturer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        type: \"submit\",\n        children: \"Register Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), this.state.error, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Company Name is \", this.state.companyName, \" and ID is \", this.state.identificationNumber, \" with location \", this.state.location, \" and role\", this.state.scRole, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You registered a company \", this.state.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default OnboardingCompany;","map":{"version":3,"sources":["/home/buzzlite/MCG-VUiLA/src/Onboarding/OnboardingCompany.js"],"names":["React","Component","Web3","Form","Input","Select","options","key","text","value","OnboardingCompany","constructor","props","changeHandler","event","nam","target","name","val","err","Number","setState","error","changeSelect","e","scRole","submitHandler","preventDefault","registerMyCompany","state","companyName","identificationNumber","location","bind","companyId","companyDidMount","checkOwnedCompany","watchEvents","mcg","events","companyRegistered","filter","_user","userAccount","fromBlock","toBlock","console","log","on","gasAmount","methods","registerCompany","estimateGas","from","send","gas","company","getYourCompany","call","owner","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { Form, Input, Select } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nconst options = [\n    {key: 'm', text: \"Manufacturer\", value: \"Manufacturer\"},\n    {key: 'd', text: \"Distributor\", value: \"Distributor\"},\n    {key: 't', text: \"3PL Trucking\", value: \"3PL trucking\"}\n]\n\nclass OnboardingCompany extends Component{\n\n    constructor(props){\n        super(props);\n        this.submitHandler = this.submitHandler.bind(this);\n        this.state = { companyName: null, identificationNumber: null, location: null,scRole: null,error: '', companyId: null};\n        this.changeHandler = this.changeHandler.bind(this);\n        this.changeSelect = this.changeSelect.bind(this);\n\n    }\n\n    companyDidMount(){\n        this.checkOwnedCompany();\n        this.watchEvents()\n    }\n\n    watchEvents(){\n        this.props.mcg.events.companyRegistered({\n            filter:{_user: this.props.userAccount}\n        },{fromBlock:0, toBlock: \"latest\"\n        },function(error, event){console.log(event)}).on('data',function(event){\n            this.setState({companyId: event.companyId})\n            console.log(event.companyId);\n        })\n    }\n\n    async registerMyCompany(companyName, identificationNumber,location, scRole){\n        \n        const gasAmount = await this.props.mcg.methods.registerCompany(companyName,identificationNumber,location,scRole).estimateGas({from: this.props.userAccount});\n        await this.props.mcg.methods.registerCompany(companyName,identificationNumber,location,scRole).send({from: this.props.userAccount, gas: gasAmount})\n    }\n\n    async checkOwnedCompany(){\n        var company = await this.props.mcg.methods.getYourCompany().call();\n        this.setState({companyName: company.owner})\n        return (company.owner.length > 2)\n    }\n\n    changeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        let err = \"\";\n        if (nam === \"company\"||\"location\"||\"scRole\"){\n            if(val!==\"\" && Number(val)){\n                err = <strong color = \"red\">Fields cannot be empty and must be string except Identification Number</strong>\n            }\n        // }\n        // else if(nam = \"identificationNumber\"){\n        //     if(!Number(val) && val === null){\n        //     err = <strong> Fields cannot be empty and must be a number</strong>\n        // }\n    }\n        this.setState({error:err});\n        this.setState({[nam]:val})\n    }\n\n    changeSelect = (e,{value}) => this.setState({scRole:value});\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.registerMyCompany(this.state.companyName, this.state.identificationNumber, this.state.location, this.state.scRole);\n    }\n\n    render(){\n        return(!this.checkOwnedCompany()\n\n              ? <Form onSubmit = {this.submitHandler}>\n                    <Form.Group widths = \"equal\">\n                        <Form.Field control = {Input}  fluid label='Company Name' placeholder=' XYZ Ltd.' name = \"companyName\" onChange = {this.changeHandler}/>\n                        <Form.Field control = {Input} fluid label='Identification Number' placeholder=\"123456789\" name = \"identificationNumber\" onChange  = {this.changeHandler} />\n                        <Form.Field control = {Input} fluid label='Location' placeholder=\"1000 10 W Ave Vancouver\" name = \"location\" onChange  = {this.changeHandler} />\n                        <Form.Field control = {Select}\n                            name = \"scRole\"\n                            onChange = {this.changeSelect}   \n                            fluid\n                            label='Select Supply Chain Role'\n                            options = {options} \n                            placeholder='Manufacturer'\n                        />\n                    </Form.Group>\n                    <Form.Button type = \"submit\" >Register Company</Form.Button>\n                    {this.state.error}\n                    <p>Company Name is {this.state.companyName} and ID is {this.state.identificationNumber} with location {this.state.location} and role{this.state.scRole} </p>\n                \n                </Form>\n              :<div>\n                  <p>\n                      You registered a company {this.state.companyName}\n                  </p>\n              </div>\n        )\n    }\n}\n\nexport default OnboardingCompany;"]},"metadata":{},"sourceType":"module"}